gSOAP Notes
-----------

Important Facts
- has been tested on many platforms including
  Red Hat Linux, VxWorks and Mac OS X
- complies with WS-I Basic Profile 1.0a and SOAP 1.2
- supports WSDL 1.1
- supports the UDDI v2 inquiry and publish APIs
- supports IPv4 and IPv6
- can run under Apache 1.x and 2.0 with mod_gsoap
- can run using its own stand-alone server
- see the gSOAP Fact Sheet at http://www.cs.fsu.edu/~engelen/factsheet.pdf
  for more

Installation
- download gsoap_linux_2.7.6c.tar.gz
  from http://www.cs.fsu.edu/~engelen/soap.html to ~
- su root
- mv gsoap_linux_2.7.6c.tar.gz /opt
- gunzip gsoap_linux_2.7.6c.tar.gz
- tar xf gsoap_linux_2.7.6c.tar
- documentation files under doc may not be readable by everybody
  * do a chmod a+r on all the files
    and a chmod a+x on subdirectories
- cd gsoap-linux-2.7
- add /usr/local/lib to the LD_LIBRARY_PATH environment variable
- ./configure
- make
- make install
- add /opt/gsoap-linux-2.7 to PATH environment variable
  * for easy access to soapcpp2 and wsdl2h commands

Example Use
- download a WSDL from http://www.xmethods.net
  (for example, "WEATHER - TEMPERATURE" TemperatureService.wsdl)
- from a terminal, cd to the directory containing the WSDL
  and enter "wsdl2h -o temperature.h TemperatureService.wsdl
- this generates temperature.h
- enter "soapcpp2 -I /opt/gSOAP/gsoap-2.6/soapcpp2 temperature.h"
- see Makefile in /home/mvolkmann/WebServices/Temperature

Other Examples
- see ~/gSOAP/Math and ~/gSOAP/Echo

Generating WSDL from C++
- the soapcpp2 tool generates WSDL and many other files
  from a service .h file that contains special comments and function signatures
- for an example, see ~/gSOAP/Math/Math.h
- here's a list of the files generated
  soapStub.h, soapH.h, soapC.cpp,
  soapClient.cpp, soapClientLib.cpp,
  soapServer.cpp, soapServerLib.cpp,
  math.wsdl (web service description),
  soapmathProxy.h (client proxy),
  soapmathObject.h (server object),
  math.add.req.xml (sample SOAP XML request for the add operation),
  math.add.res.xml (sample SOAP XML response for the add operation),
  math.multiply.req.xml (sample SOAP XML request for the multiply operation),
  math.multiply.res.xml (sample SOAP XML response for the multiply operation),
  math.nsmap (namespace mapping table),
  ns.xsd (XML Schema)
- document/literal is used by default

Debugging
- Compile stdsoap2.cpp with compiler option -DDEBUG to enable the DEBUG macro.
- When you run your application, three files are created in the
  current directory: SENT.log, RECV.log, and TEST.log.
- All output messages are appended to SENT.log.
- All input messages are appended to RECV.log.
- TEST.log contains various logging messages
  generated by the gSOAP runtime environment.

WS-I Basic Profile support
- 

gSOAP UDDI v2 API
- 
