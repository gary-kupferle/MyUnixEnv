Polymer Notes

Issues
- lack of error messages when components are used incorrectly
  * tooling is sometimes painted as a bad thing,
    but it also identifies lots of bugs
- shadow DOM makes CSS much more difficult
- weak binding system leads to lots of trivial, private methods
  * very restricted syntax inside [[ ]] and {{ }}
- very verbose conditional logic and iteration in HTML
  * <template is="dom-if" if="condition"> ... </template>
  * <template is="dom-repeat" items="array-ref"> ... </template>
- firing events is a less direct mechanism for communicating
  with a parent than callback functions
  * with events, you don't know if a parent is listening
  * will callbacks, it was supplied by the parent
- placing each component in its own git repository
  really slows development
- each component holds state in its props
  * runs counter to the React pattern of holding
    all app state in a single object
- two-way data binding results in apps that are harder
  to understand and maintain
- iron-ajax causes logic to be split into four pieces
  that are not co-located, making it harder to follow
  * declarative setup in HTML
  * invocation (ex. this.$.ajax.generateRequest())
  * success handling
  * error handling
- Polymer property declarations are just for documentation.
  * when violated, no error messages are generated
- extra tags needed to embed CSS, HTML, and JavaScript
  in a single file make it verbose
- being a web standard doesn't guarantee success/adoption
  * for example, XHTML (replaced by HTML5),
    SOAP (typically replaced by REST),
    WSDL, XQuery, XForms, XLink, XPointer,
    many "Web Services" specs, ...
- no provided pattern for state management
- How can a Polymer component use functions defined in a
  separate .js file?  It seems it cannot use ES6 imports.
- have to use bower instead of npm
- "!someBoolean" works but "! someBoolean" doesn't
- _config is a reserved property name; are there others
- dom-repeat doesn't work inside table elements in IE
- can't access properties with "this." inside observer methods
- other IE issues?
