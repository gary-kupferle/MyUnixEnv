Fish Shell Notes

Help
- browse https://fishshell.com/
- browse https://github.com/jbucaran/fish-shell-cookbook
- to get help on any fish command, man {command}
  * ex. man function; man if, man switch

Installing
- browse https://fishshell.com/
  and search for "Go Fish"
- for macOS there is an installer
  and can run "brew install fish"

Making default shell
- chsh -s /usr/local/bin/fish

Variables
- set with: set {name} {value}
  * by default variables are local to the block where they are defined
    - can specify with -l (--local), but this is the default
  * to make them global to the session, add -g option (--global)
    - really visible to everything in the same process?
  * to export them so they are visible in child processes,
    add -x option (--export)
  * to make them universal so they are
    shared between all processes on the current computer
    and saved across restarts, add -U option (--universal)
- delete (erase) with: set -e {name} (--erase)
- query (determine if set) with: set -q {name} (--query)
  * sets status variable to 0 if defined and 1 if not
    - to see, echo $status
  * to see value, echo ${name}
- list names of all defined variables: set -n (--names)
  * this may abbreviate long names
  * to avoid, use -L (--long)

Functions
- can define in files under .config/fish/functions
- can use as command-line commands
  * after changes, may need to start a new shell
- to call a function, must specify its name
  * no parens around arguments or commas between them

If statements
- if {condition}
    {statements}
  else if {condition}
    {statements}
  else
    {statements}
  end

Switch statements
- switch {expression} # ex. $color
  case {value1}, {value2}
    {statements}
  case {value3}
    {statements}
  case '*' # like default in other languages
    {statements}
  end
- each case can be followed by one or more values
- does not fall through, no break at end of each case

Loops

Multiple statements on same line
- separate by semicolons
- ex. function foo; echo in foo; end

Custom Prompt
- create ~/.config/fish/functions/fish_prompt.fish
- if custom prompt doesn't fit in terminal width,
  it will use just "> " instead
- ex.
function fish_prompt
  # Get the current Git branch.
  # This will be an empty string if not in a Git repo.
  set git_branch (git rev-parse --abbrev-ref HEAD ^/dev/null)

  # If in a Git repo (-q for quiet) ...
  if string length -q $git_branch
    set branch " ($git_branch)"
  else
    set branch ''
  end

  set_color --bold brblue
  echo -n $PWD # -n suppresses newline at end
  set_color --bold yellow
  echo $branch
  set_color normal
  echo -n 'üê†  '
end

