Amazaon EC2 Notes

Setup
- browse http://aws.amazon.com/ec2/
- setup an account - requires a credit card
- a free tier is available for one year
- use Amazon Web Services (AWS) Management Console
  - browse http://console.aws.amazon.com
  - click "EC2"
  - click "Instances" in left nav.
  - displays all instances in the selected region
    * change region with dropdown in upper-left
  - to stop an instance, click its checkbox and
    pick "Stop" from the "Actions" menu
    * takes a while to finish
  - to delete an instance, click its checkbox and
    pick "Terminate" from the "Actions" menu
    * it should disappear from the list of instances in about an hour

Can get an Ubuntu images from http://cloud-images.ubuntu.com
- select a version (ex. "quantal" for version 12.10)
- select a release date folder (ex. 20130401) or "current"
- select an AMI with
  * a region that starts with us-east-1
  * arch = 64-bit
  * root store = instance
- press the "Launch" button for the AMI
- press "Continue" button several times to accept defaults
- create a new key pair or use an existing one
  * creates a .pem file that is needed to ssh to server (described below)
- press "Continue" button
- press "Launch" button
- press "Close" button
- wait for image state to change to "running"
- click "Name" field and enter a name for the instance
- click instance to see address (starts with "ec2-")
- click "Security Groups" in left nav.
  * rather than editing the default one, create a new one
  * click "Inbound" tab
  * to enable SSH
    - in 'Create a new rule" dropdown, select "SSH"
    - press "Add Rule" button
    - press "Apply Rule Changes" button
  * to enable ping
    - in 'Create a new rule" dropdown, select "Custom ICMP Rule"
    - leave the Type set to "Echo Reply"
    - leave the source set to "0.0.0.0/0" so anyone can ping the server
    - press "Add Rule" button
    - press "Apply Rule Changes" button
  * to enable HTTP
    - in 'Create a new rule" dropdown, select "HTTP"
    - press "Add Rule" button
    - press "Apply Rule Changes" button
- right-click instance and select "Reboot"
  after making changes to the instance configuration
  
- two users are created, root and ubuntu

To ssh to an instance
- move generated .pem file to ~/.ssh directory
- cd ~/.ssh
- chmod 400 markec2.pem
- ssh -i {path-to-pem-file} ubuntu@{instance-url}
  * ex. ssh -i ~/.ssh/mark-ec2.pem ubuntu@ec2-54-224-116-109.compute-1.amazonaws.com
  * ubuntu is the non-privileged account that is created by default
  * can copy instance-url from EC2 management console
  * EC2 Linux instance accounts do not have passwords.
    You must use a key pair (.pem file) to login to them.
- default shell is bash
- your ~/bin/ec2ssh script does this!
  * just enter "ec2ssh"

Generate ssh key
- you must do this for GitHub
- cd ~/.ssh
- ssh-keygen -t rsa -C 'r.mark.volkmann@gmail.com'
  * press return several times to accept defaults

To copy files from an instance
- scp -i {path-to-pem-file} ubuntu@{instance-url}:{relative-file-path-from-home-dir} .
  * copies the file into the current directory using the same file name
  * ex. scp -i ~/.ssh/mark-ec2.pem ubuntu@ec2-54-224-116-109.compute-1.amazonaws.com:.ssh/id_rsa.pub .
  * mv id_rsa.pub .ssh/ec2.pub
- your ~/bin/ec2scp script does this!
  * just enter "ec2scp {file-path}"

To add public key to GitHub
- copy .pub file from instance to your computer using steps above
- pbcopy < .ssh/ec2.pub
- browse http://github.com and sign in
- click account settings icon in upper-right
- click "SSH Keys" in left nav.
- press "Add SSH key" button
- enter a title
- paste the key
- press the "Add key" button
- enter GitHub password

Development environment setup
- sudo apt-get update
  * so latest versions of all available software are known
- sudo apt-get install build-essential
  * to get common tools such as cpp, gcc, make, perl, python and tmux
- sudo apt-get install git
- sudo apt-get install ruby
- to install Node.js
  * mkdir node
  * cd node
  * wget -N http://nodejs.org/dist/node-latest.tar.gz
  * tar xf node-latest.tar.gz
  * cd node-v0.10.2
  * ./configure
  * sudo make install
    - this takes a REALLY LONG TIME!
  * npm install -g jshint
  * npm install -g express

tmux
- you may get this when build-essential is installed
  * if so, the steps below are not necessary
- download and install libevent from http://www.monkey.org/~provos/libevent/
  * ./configure; make; sudo make install
- download and install ncurses from http://invisible-island.net/ncurses/
  * ./configure; make; sudo make install
- copy tmux-{version}.tar.gz to instance
- tar -xf tmux-{version}.tar.gz
- ./configure; make; sudo make install

Your UNIX setup
- git clone git@github.com:mvolkmann/MyUnixEnv.git
- cd MyUnixEnv
- .setup
- logout and back in

Enable FTP to the instance
- add TCP rule for port 21
  * open management console from browser
  * select instance
  * select "Security Groups"
  * select "Inbound" tab
  * enter 21 in "Port Range" field
  * press "Add Rule"
  * press "Apply Rule Changes"
- sudo apt-get install vsftpd
- HAVE NOT TESTED THIS!

Static IP addresses
- associated with your EC2 account, not a specific instance, to allow failover between instances
- browse management console
- click "Elastic IPs" in left nav.
- press "Allocate New Address" button
  * you got 54.225.173.157
- right-click the new address and select "Associate"
- select an instance
- press the "Yes, Associate" button
- after this, use that IP address to ssh and scp with the instance

To associate a domain name with an IP address
- often the domain provider website can be used
- for hover.com
  * sign in
  * click "DNS" tab
  * hover over the first "@" and click "edit DNS"
  * enter the static IP address obtained via "Elastic IPs"
- can this also be done in the EC2 management console?

To add users to an instance
- log in as ubuntu
- sudo add user {username}
- respond to prompts, including password

To enable password authentication with SSH instead of using a key
- ssh to the instance
- sudo vim /etc/ssh/sshd_config
- change PasswordAuthentication to yes and save
- sudo service ssh reload

To ssh as a new user
- ssh {user-name}@{instance-url}
  * will prompt for password

Billing alerts
- send an email when certain limits are passed
