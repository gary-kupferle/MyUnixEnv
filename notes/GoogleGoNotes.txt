Google Go Notes

I'm pretty picky when it comes to syntax. It's hard for me to use a
language that has weird syntax. There are lots of things I like about
Go, but here are some things I don't like.

1) In order to export a function, it's name has to start uppercase. Of
   course that's why I can't use any Microsoft languages. ;-)

2) A return with no value returns the named variables at the top of
   the function definition. For example,

    func split(sum int) (x, y int) {
        ...
            return
    }

    That returns x and y. That's just weird! I don't want to see a bare
    return and have to look up at the first line of the function to see
    what that means.

3) Variables can be declared in several ways. Here is one:

   var x, y, z int

   I need "var" AND a type?

4) Initializiers are weird. For example,

   var x, y, z int = 1, 2, 3

   I would much rather see something like this:

   x = 1, y = 2, z = 3 int

5) Inside functions, variables can be declared in a different way.
   For example,

   x, y, z := 1, 2, 3

   Pick one way please!

6) Here's another way!

   var (
     x int = 1
     y int = 2
     x int = 3
   )

  Okay, just stop it!

7) if statements can included a "short statement". For example,

   if v := math.Pow(x, n); v < lim {

   Why is that preferred over this?

   v := math.Pow(x, n)
   if v < lim {

   I know the scope of v is different this way, but I have always
   hated assignments in conditions and this is kind of
   variation on that idea.

8) Struct members must have uppercase names.
